# Kafka Configuration
KAFKA_BOOTSTRAP_SERVERS: kafka.dev.svc.cluster.local:9092
KAFKA_SECURITY_PROTOCOL: SASL_PLAINTEXT
KAFKA_SASL_MECHANISM: PLAIN
KAFKA_SASL_JAAS_CONFIG: org.apache.kafka.common.security.plain.PlainLoginModule required username="kafkaUser" password="kafkaPassword123!";

server:
  port: 8080
spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  application:
    name: document-processor-data
  profiles:
    include:
      - lot-sizes
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    properties:
      security.protocol: ${KAFKA_SECURITY_PROTOCOL}
      sasl.mechanism: ${KAFKA_SASL_MECHANISM}
      sasl.jaas.config: ${KAFKA_SASL_JAAS_CONFIG} 
    consumer:
      group-id: document-processor
      auto-offset-reset: earliest
  data:
    mongodb:
      uri: mongodb://ssd2658:ssd2658@mongodb.dev.svc.cluster.local:27017/portfolio?authSource=admin
      database: portfolio
      auto-index-creation: true

app:
  kafka:
    portfolio-topic: am-portfolio
    trade-topic: am-trade

logging:
  level:
    root: INFO
    org.am.mypotrfolio: DEBUG
    org.springframework: INFO
    org.hibernate: INFO
    org.hibernate.SQL: INFO
    '[org.hibernate.type.descriptor.sql.BasicBinder]': TRACE
    '[org.springframework.data.mongodb.core.MongoTemplate]': DEBUG



# Management/Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
      validate-group-membership: false
      group:
        readiness:
          include: diskSpace,mongodb,redis,kafka
        liveness:
          include: diskSpace,mongodb,redis,kafka
  health:
    livenessstate:
      enabled: true
    readinessstate:
      enabled: true
    mongo:
      enabled: true
    redis:
      enabled: true
    kafka:
      enabled: true